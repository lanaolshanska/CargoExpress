@using Delivery.Models;
@model Driver

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_NavigationLayout.cshtml";
}

@Styles.Render("https://fonts.googleapis.com/css?family=Maven+Pro:400,500,700")
@Styles.Render("~/Content/bootstrap.min.css")
@Styles.Render("~/Content/customFormCss")

@using (Html.BeginForm("Edit", "Driver", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal editor">
        <h4>Profile for @Model.FirstName @Model.LastName</h4>
        <hr />
        <div class="container">
            @Html.ValidationSummary(true, "", new { @class = "errmessage summary" })

            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.TripsTotal)
            @Html.HiddenFor(model => model.UserId)
            @Html.HiddenFor(model => model.Status)

            <div class="form-group row">
                @Html.LabelFor(model => model.FirstName, "First name", htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-8">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "errmessage" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.LastName, "Last name", htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-8">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "errmessage" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Birthdate, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-8">
                    @Html.EditorFor(model => model.Birthdate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                    @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "errmessage" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.CellPhone, "Phone number", htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-8">
                    @Html.EditorFor(model => model.CellPhone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CellPhone, "", new { @class = "errmessage" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-8">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "errmessage" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.StartedDrivingYear, "Year you started to drive", htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-8">
                    @Html.EditorFor(model => model.StartedDrivingYear, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StartedDrivingYear, "", new { @class = "errmessage" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.HasCriminalRecord, "Do you have any criminal records?", htmlAttributes: new { @class = "control-label col-sm-2 checkbox-label" })
                <div class="col-sm-8">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.HasCriminalRecord)
                        @Html.ValidationMessageFor(model => model.HasCriminalRecord, "", new { @class = "errmessage" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class = "control-label col-sm-2"> Upload file </label>
                <input type="file" name="photo" class="form-control-file" id="exampleFormControlFile1">
            </div>
            <div class="form-inline buttons">
                <button type="submit" class="btn btn-success edit">Save</button>
                @Html.ActionLink("Cancel", "Info", null, new { @class = "btn btn-danger edit" })
            </div>
        </div>
    </div>
}